@handle_exceptions
@handle_nestable
@handle_array_like_without_promotion
@handle_out_argument
@to_native_arrays_and_back
@handle_device_shifting
def lu(
    A: Union[ivy.Array, ivy.NativeArray],
    /,
    *,
    pivot: bool = True,
    out : Optional[Union[ivy.Array, ivy.NativeArray]] = None,
) -> Tuple[Union[ivy.Array, ivy.NativeArray], Union[ivy.Array, ivy.NativeArray] , Union[ivy.Array, ivy.NativeArray]]:
    """
    Compute LU decomposition with partial pivoting of a matrix. 

  Parameters -

  1. A (Tensor) – tensor of shape (*, m, n) where * is zero or more batch dimensions.
  2. pivot (bool, optional) – Controls whether to compute the LU decomposition with partial pivoting or no pivoting. Default:        True.

  Keyword Arguments:

  1. out (tuple, optional) – output tuple of three tensors. Ignored if None. Default: None.

  Returns:

  1. A named tuple (P, L, U).
   """
    return current_backend(A).lu(A, pivot=pivot, out=out)
